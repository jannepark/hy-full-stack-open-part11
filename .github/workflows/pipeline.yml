name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        # with:
        #   node-version: '16'
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Install backend dependencies
        run: npm install
      - name: create env file
        run: |
          touch .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "SECRET=${{ secrets.SECRET }}" >> .env
          echo "TEST_MONGODB_URI=$(echo '${{ secrets.TEST_MONGODB_URI }}' | base64 --decode)" >> .env
      - name: Display env file
        run: cat .env
      - name: Verify env file contents
        run: |
          echo "MONGODB_URI Length: $(echo -n ${{ secrets.MONGODB_URI }} | wc -c)"
          echo "TEST_MONGODB_URI Length: $(echo -n ${{ secrets.TEST_MONGODB_URI }} | wc -c)"
          echo "PORT Length: $(echo -n ${{ secrets.PORT }} | wc -c)"
      # - name: run backend
      #   run: npm run start
      - name: run backend tests
        run: npm run test
      - name: Start backend in background
        run: npm run start & sleep 5
      - name: Install frontend dependencies
        run: cd frontend && npm install
      - name: test frontend
        run: cd frontend && npm run test
      - name: build
        run: cd frontend && npm run build
      # - name: e2e tests
      #   uses: cypress-io/github-action@v5
      #   with:
      #     command: npm run test:e2e
      #     start: npm run start-prod
      #     wait-on: http://localhost:5000
      - name: Deploy app
        run: flyctl deploy --remote-only
        if: ${{ github.event_name == 'push' }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      # - name: Notify Successfull Deployment
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: ${{ success() && github.event_name == 'push' }}
      #   with:
      #     severity: info
      #     details: Test Succeeded!
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      # - name: Notify Test Failure
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: ${{ failure() && github.event_name == 'push' }}
      #   with:
      #     severity: error
      #     details: 'commit ${{github.event.head_commit.url}} by ${{github.triggering_actor}} broke the build'
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  # tag_release:
  #   needs: [simple_deployment_pipeline]
  #   if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '16'
  #     - name: Bump version and push tag
  #       uses: anothrNick/github-tag-action@a2c70ae13a881faf2b4953baaa9e49731997ab36
  #       if: ${{ github.event_name == 'push' }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         DEFAULT_BUMP: patch
  #DRY_RUN: true
